{
    "next": "הבא",
    "back": "הקודם",
    "finish": "סיום",
    "reset": "שחזר",
    "homepage":{
        "intro":"להבין איך למידת מכונה מתבצעת בעזרת סמולציות ואנמציות בדו/תלת מימד והסברים פשוטים.",
        "get_started_btn":"להתחלה לחץ כאן",
        "first_paper_header":"ויזואליזציות ב -דו/תלת מימד",
        "first_paper_text":"להבין את המתמטיקה מאחורי האלגוריתמים בעזרת דברים ויזואלים.",
        "second_paper_header":"הדגמות שמתבצעות בצעדים.",
        "second_paper_text":"עוברים איתך על כל התהליך בלי קיצורי דרך!",
        "third_paper_header":"מעקב אחר התקדמות הלמידה שלך.",
        "third_paper_text": "לא תאבד את עקבותיך בלמידה של האלגוריתמים.",
        "fourth_paper_header":"קל להבנה",
        "fourth_paper_text": "סוף סוף תשלוט בנושאים שאתה מתקשה ללמוד!"
    },

    "algorithms":{
        "algos": "אלגורתמים",
        "get_started": "איך להתחיל?",
        "choose_alg": "יש לבחור אחד מהאלגוריתמים שמעניינים אותך ולהתחיל ללמוד!"
    },

    "cards":{
        "main_algs":"אלגוריתמים עיקריים",
        
        "linear_regression":{
            "text": "תלמד את האלגוריתם linear regression.",
            "info":"האלגוריתם מוצא את הקו הלינארי הכי קרוב לכל הנקודות.",
            "label":"linear regression"
        },
        
        "gradient_descent":{
            "text":"תלמד את האלגוריתם Gradient Descent.",
            "info":"האלגוריתם הזה מוצא את המינימום של הפונקציה",
            "label":"Gradiant Descent"
        },

        "knn":{
            "text":"תלמד את האלגוריתם K Nearest Neighbors.",
            "info":"האלגוריתם חוזה את הסוג של האובייקט לפי K השכנים הכי קרובים אליו.",
            "label":"K Nearest Neighbors"
        },

        "neural_networks":{
            "text":"תלמד את האלגוריתם neural networks",
            "info":"האלגוריתם חוזה את התשובה הנכונה.",
            "label":"neural networks"
        },

        "logistic_regression":{
            "text":"תלמד את האלגוריתם logistic regression.",
            "info":"האלגוריתם מוצא את הקו הכי קרוב לכל הנקודות.",
            "label":"logistic regression"
        }

    },


    "gd":{
        "end": "סיימת את כל השלבים!",
        "description":"Gradient descent is an iterative algorithm for finding a local minimum.\nIt starts at a given point and the idea is to take repeated steps in the opposite direction of the gradient (derivative) of the function at the current point.",
        "idea": "הרעיון מאחורי זה הוא לקחת צעדים בכיוונים מנוגדים מהנגזרת של הפונקציה בנקודה מסויימת.",
        "example_1":"Let us take for example",
        "example_2":"as the function and",
        "example_3":"as the starting point.",
        "gd_two_vars":"Now let us see how Gradient Descent handles functions with 2 variables!",

        "steps":"The first 10 steps the algorithm takes are shown in the following animation:",
        "how":"How does the algorithm achieve this?",
        "defs":"Some definitions:",
        "almost_descr":"Almost the same as before!",

        "point_vals":{
            "x_val":"the x value of the point.",
            "y_val":"the y value of the point.",
            "x_val_new":"the x value of the new point.",
            "y_val_new":"the y value of the new point.",
            "z_val":"the z value of the point."
        },

        "derivatives":{
            "description":"the derivative of f.",
            "derivative_val_x":"the value of the derivative at x.",
            "f_by_x":"the derivative of f by x variable (consider y as a constant).",
            "f_by_y":"the derivative of f by y variable (consider x as a constant).",
            "val_f_by_x":"the value of the derivative by x at (x, y).",
            "val_f_by_y":"the value of the derivative by y at (x, y)."
        },
        
        "hyperparameter":"the Hyper-parameter that dictates step size.",
        "foreach_step":"In each step the algorithm does the following:",
        "calc":"calculate",
        "apply":"Apply",

        "slides":{
            "alpha": "אלפא",
            "starting_point":"נקודת התחלה",
            "derivative":"הנגזרת של הפונקציה היא"
        },
        "tasks" : {
            "1d_int": "מבוא לחד-מימד",
            "1d_vis": "ויזואליזציה",
            "1d_sbs": "צעד אחר צעד",
            "1d_hyp": "היפר-פרמטר",
            "2d_int": "מבוא לדו-מימד",
            "2d_vis": "ויזואליזציה",
            "2d_sbs": "צעד אחר צעד",
            "2d_hyp": "היפר-פרמטר"
        },

        "enter_func":"Enter a function (can be any function you want but the variable must be x), Hyper-Parameter and set the starting point.\nHit the play button to start the animation, you can also pause it and zoom in the graph by clicking the pause button or clear everything using the X button.",
        "try_calc":"Try to calculate the value of each variable as the algorithm does (2 decimal points).\nEach click on the arrow will draw the next/previous step",
        "search_alpha":"Search for the best alpha which gets to the minimum with the least amount of steps.",
        "you_try":"Try it yourself! Just like before the variables must be x and y.",
        "challenge":"Challenge yourself and calculate each step."
    },

    "sign_in":{
        "login":"תתחבר",
        "forgot_pass":"שכחת סיסמה?",
        "sign_up":"אין לך משתמש? תירשם!"
    },

    "footer":{
        "made_by":"נעשה ע''י סטונדים מהטכניון!"
    },

    "list_items":{
        "sub_head":"Saved reports"
    },

    "task":"משימה"

}